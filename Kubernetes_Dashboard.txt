setting up and accessing the Kubernetes Dashboard is one of the most common follow-ups after building a cluster.


?? Install & Access Kubernetes Dashboard

?? Step 1: Deploy the Kubernetes Dashboard

Run on the master node:

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml

?? This creates the dashboard in the kubernetes-dashboard namespace.

Check if pods are running:

kubectl get pods -n kubernetes-dashboard

Expected output:

NAME                                         READY   STATUS    RESTARTS   AGE
kubernetes-dashboard-xyz-abc                 1/1     Running   0          1m
dashboard-metrics-scraper-xyz-abc            1/1     Running   0          1m

?? Step 2: Create Admin User

The dashboard needs a ServiceAccount with cluster-admin role.
Create a file dashboard-adminuser.yaml:
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard
Apply it:
kubectl apply -f dashboard-adminuser.yaml

?? Step 3: Get Access Token

kubectl -n kubernetes-dashboard create token admin-user

Output will be a long JWT token string. Save it somewhere — you’ll use it to log in.

?? Step 4: Access Dashboard

Since the Dashboard is not exposed publicly by default, you have 2 common options:

Option A: kubectl proxy (easy & safe)
Run:
kubectl proxy
Then open in your browser:

http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/

?? Use the token from Step 3 to log in.

Option B: NodePort Service (if you want external access)

Edit the dashboard service:
kubectl -n kubernetes-dashboard edit service kubernetes-dashboard
Change:
type: ClusterIP
to:
type: NodePort
Save and exit.
Get assigned NodePort:
kubectl -n kubernetes-dashboard get svc kubernetes-dashboard
Example output:
NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE
kubernetes-dashboard   NodePort   10.109.183.88   <none>        443:32455/TCP   10m
Now open:
https://<MASTER_NODE_IP>:32455/
Ignore SSL warning and log in with the token from Step 3.

?? Step 5: Verify
* After login, you should see the Kubernetes Dashboard UI with cluster details.
* You can view nodes, pods, deployments, services etc.

? That’s it! Now you have a working Kubernetes Dashboard.


